package com.winthier.exploits.sql;

import com.avaje.ebean.validation.NotNull;
import com.winthier.exploits.PlayerAction;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import lombok.Getter;
import lombok.NonNull;
import lombok.Setter;

@Entity
@Table(name="player_indices",
       uniqueConstraints=@UniqueConstraint(columnNames={"player_id", "action"}))
@Getter
@Setter
public class PlayerIndexTable {
    @Id private Integer id;
    @ManyToOne(optional=false) private PlayerTable player;
    @NotNull private Integer action;
    @NotNull private Integer playerIndex;
    @Version private Date version;

    static PlayerIndexTable find(@NonNull PlayerTable player, @NonNull PlayerAction action) {
        return DB.unique(DB.get().find(PlayerIndexTable.class).where().eq("player", player).eq("action", action.id).findList());
    }

    static PlayerIndexTable find(@NonNull UUID playerId, @NonNull PlayerAction action) {
        PlayerTable player = PlayerTable.find(playerId);
        if (player == null) return null;
        return find(player, action);
    }
    
    static PlayerIndexTable findOrCreate(@NonNull PlayerTable player, @NonNull PlayerAction action) {
        PlayerIndexTable result = find(player, action);
        if (result == null) {
            result = new PlayerIndexTable();
            result.setPlayer(player);
            result.setAction(action.id);
            result.setPlayerIndex(0);
            result.save();
        }
        return result;
    }

    public static PlayerIndexTable findOrCreate(@NonNull UUID playerId, @NonNull PlayerAction action) {
        return findOrCreate(PlayerTable.findOrCreate(playerId), action);
    }

    void save() {
        DB.get().save(this);
    }
}
