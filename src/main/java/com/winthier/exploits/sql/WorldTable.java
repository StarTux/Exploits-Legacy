package com.winthier.exploits.sql;

import com.avaje.ebean.validation.Length;
import com.avaje.ebean.validation.NotEmpty;
import java.util.HashMap;
import java.util.Map;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import lombok.Getter;
import lombok.Setter;

@Entity
@Table(name="worlds",
       uniqueConstraints=@UniqueConstraint(columnNames={"name"}))
@Getter
@Setter
public class WorldTable {
    static final Map<String, WorldTable> cache = new HashMap<String, WorldTable>();
    
    @Id
    private Integer id;

    @NotEmpty
    @Length(max=40)
    private String name;

    static WorldTable find(String name) {
        WorldTable result = cache.get(name);
        if (result != null) return result;
        result = DB.get().find(WorldTable.class).where().eq("name", name).findUnique();
        if (result != null) cache.put(name, result);
        return result;
    }

    static WorldTable findOrCreate(String name) {
        WorldTable result = find(name);
        if (result == null) {
            result = new WorldTable();
            result.setName(name);
            DB.get().save(result);
        }
        return result;
    }
}
